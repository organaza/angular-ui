@import 'oz_variables';

:host {
  @include component;
  @include component-focus;
  @include component-invalid;
  border-bottom: $oz-control-default-border solid $oz-control-border-color;
}
:host.disabled,
:host.borderless {
  border: 0 !important;
}

.uppercase {
  text-transform: uppercase;
}

.oz-textinput {
  width: 100%;
  position: relative;
  display: flex;
  border-radius: $oz-control-border-radius;

  &-borderless {
    border: 0;
  }

  &-disabled {
    border: 0;
    // opacity: 0.5;
    cursor: default;
  }

  &-background {
    @include component-popup-background;
  }

  &-background-active {
    display: block;
  }

  &-container {
    resize: none;
    min-height: 0;
    display: block;
    outline: none;
    border: none;
    position: relative;
    width: 100%;
    background-color: transparent;
    margin: 0;
    padding: $oz-control-textinput-padding;
    color: inherit;
    font-family: inherit;
    line-height: inherit;
    font-weight: inherit;
    text-align: inherit;
    z-index: 1;

    &-nopadding {
      padding-top: 0;
      padding-bottom: 5px;
    }
  }

  &-prompt {
    font-style: $oz-control-prompt-font-style;
    padding: $oz-control-textinput-padding;
    font-weight: inherit;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    color: inherit;
    opacity: 0.5;
  }

  &-prompt-nopadding {
    padding: 0 0;
    padding-bottom: 5px;
  }

  &-prompt-active {
    z-index: 0;
  }

  &.showClear {
    padding-right: 20px;
  }

  &-clear {
    border-radius: 100%;
    cursor: pointer;
    position: absolute;
    height: 100%;
    padding: $oz-control-textinput-padding;
    right: 0;
    align-items: center;
  }
}
.multiline-textarea {
  position: absolute;
  height: 100%;
  width: 100%;
}
.oz-textinput-container.resize-text {
  opacity: 0;
  min-height: initial;
  position: initial;
  white-space: pre-wrap;
}

:host.ng-dirty.ng-invalid .oz-textinput,
:host.not-unique .oz-textinput {
  border-color: $oz-control-border-hover-color-invalid;
}

:host.ng-dirty.ng-invalid:hover .oz-textinput {
  border-color: $oz-control-border-hover-color-invalid;
}

// oz-textinput.oz-textinput-inline {
//   width: initial;
//   display: inline-block;
//   min-width: 200px;
// }
